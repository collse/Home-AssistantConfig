################################################################
### Packages / Pi-Hole
### #!secret_example
### pi_hole_url: http://x.x..x/admin/api.php
################################################################
homeassistant:
  customize:
    switch.pihole:
      friendly_name: Pi-Hole
      entity_picture: /local/pihole_alt.png
      emulated_hue_name: "pihole"
      emulated_hue_hidden: false

    sensor.pi_hole_version:
      friendly_name: Pi-Hole Version

    sensor.pihole_version_latest:
      friendly_name: Pi-Hole Version Latest

    sensor.pihole_version_current:
      friendly_name: Pi-Hole Version Current
      
    sensor.pihole_ads_percentage_blocked_today:
      icon: mdi:ticket-percent

    sensor.domains_being_blocked:
      friendly_name: Total Domains Blocking
      icon: mdi:do-not-disturb

    sensor.pihole_ads_blocked_today:
      icon: mdi:do-not-disturb
    
    sensor.dns_queries_today:
      friendly_name: DNS Queries Today
      icon: mdi:note-text

    sensor.unique_domains:
      friendly_name: Unique Domains
      icon: mdi:approval

    sensor.pihole_dns_queries_forwarded:
      icon: mdi:arrange-send-backward

    script.ad_blocker:
      friendly_name: Ad Blocker
      emulated_hue_hidden: false

    script.pihole_off:
      friendly_name: Turn Pi-Hole Off
      icon: mdi:do-not-disturb

    script.pihole_on:
      friendly_name: Turn Pi-Hole On
      icon: mdi:power

    sensor.pihole_dns:
      friendly_name: DNS Service

    sensor.pihole_blocking:
      friendly_name: Ad Blocking
      
    sensor.pihole_status:
      hidden: true
     
    sensor.pihole_status_raw:
      hidden: true

group:
  Ads Blocked:
    entities:
      - switch.pihole
      - weblink.pi_hole_management
      - sensor.pi_hole_version
      - sensor.pihole_version_latest
      - sensor.pi_hole_version_current
      - sensor.pi_hole_ads_blocked_today
      - sensor.pi_hole_ads_percentage_blocked_today
      - sensor.pi_hole_dns_queries_cached
      - sensor.pi_hole_dns_queries_forwarded
      - sensor.pi_hole_dns_queries_today
      - sensor.pi_hole_dns_unique_clients
      - sensor.pi_hole_seen_clients
      - sensor.pi_hole_dns_unique_domains
      - sensor.pi_hole_domains_blocked
#      - sensor.ads_blocked_today
#      - sensor.ads_percentage_today
#      - sensor.dns_queries_today
#      - sensor.domains_being_blocked
#      - sensor.ads_blocked_today
#      - sensor.unique_domains
#      - sensor.queries_forwarded
#      - sensor.queries_cached
      - sensor.pihole_dns
      - sensor.pi_hole_blocking
      - script.ad_blocker
      - script.pihole_on
      - script.pihole_off
      - sensor.pihole_status_raw
      - sensor.pihole_status
      - sensor.pihole_blocking

###############################################################################
#  Sensors
###############################################################################

    
sensor:
  - platform: pi_hole
    host: !secret pi_hole_url
    monitored_conditions:
      - ads_blocked_today
      - ads_percentage_today
      - dns_queries_today
      - domains_being_blocked
      - queries_cached
      - queries_forwarded
      - unique_clients
      - unique_domains
      - clients_ever_seen


######Custom Version sensor
  - platform: command_line
    command: "/usr/bin/sudo /usr/local/bin/pihole -v -p -c"
    name: 'pihole_version_current'
    value_template: '{{ value[28:] }}'
    scan_interval: 86400

  - platform: command_line
    command: "/usr/bin/sudo /usr/local/bin/pihole -v -p -l"
    name: 'pihole_version_latest'
    value_template: '{{ value[27:] }}'
    scan_interval: 86400

  - platform: template
    sensors:
      pi_hole_version:
        value_template: "{%- if states.sensor.pihole_version_current.state == states.sensor.pihole_version_latest.state -%}{{states.sensor.pihole_version_current.state}} {% else %}{{states.sensor.pihole_version_latest.state}} Available{% endif%}"
        icon_template: >-
          {% if states.sensor.pihole_version_current.state == states.sensor.pihole_version_latest.state %}
            mdi:checkbox-marked
          {% else %}
            mdi:checkbox-blank-outline
          {% endif %}
          
### you will need to allow access to the pihole binary by the homeassistant user for this to work
### as your pi-user 
### do: sudo visudo 
### add this to the end of the file and save it: homeassistant ALL = NOPASSWD: /usr/local/bin/pihole
###
### the homeassistant user can now execute sudo pihole and any option

  - platform: command_line
    command: /usr/bin/sudo /usr/local/bin/pihole status
    name: 'pihole_status_raw'
    scan_interval: 60

  - platform: template
    sensors:
      pihole_dns:
        value_template: "{{states.sensor.pihole_status_raw.state.split('[✓]')[1][1:-3]}}"
        icon_template: >-
          {%- if states.sensor.pihole_status_raw.state.split('[✓]')[1][1:-3] == 'DNS service is running' -%}
            mdi:checkbox-marked
          {%- else -%}
            mdi:checkbox-blank-outline
          {%- endif -%}

  - platform: template
    sensors:
      pihole_blocking:
        value_template: "{{states.sensor.pihole_status_raw.state.split('[✓]')[2][1:]}}"
        icon_template: >-
          {% if states.sensor.pihole_blocking.state == 'Pi-hole blocking is Enabled' %}
            mdi:checkbox-blank-outline
          {% else %}
            mdi:checkbox-marked
          {% endif %}

  - platform: template
    sensors:
      pihole_status:
        value_template: >-
          {% if states.sensor.pihole_blocking.state == 'Pi-hole blocking is Enabled' %}
            True
          {% else %}
            False
          {% endif %}
          
          
          
weblink:
  entities:
    - name: pi-hole_management
      url: !secret pihole_url
      icon: mdi:verified
      

###############################################################################
#  Switch
###############################################################################
switch:
  - platform: template
    switches:
      pihole:
        value_template: "{{ is_state('sensor.pihole_status', 'True') }}"
        turn_on:
          service: script.turn_on
          entity_id: script.pihole_on
        turn_off:
          service: script.turn_on
          entity_id: script.pihole_off
###############################################################################
#  Scripts
###############################################################################
script:
  # this script is just for alexa to toggle on/off
  ad_blocker:
    sequence:
      - service: switch.toggle
        entity_id: switch.pihole
  pihole_on:
    sequence:
       - service: shell_command.pihole_on
  pihole_off:
    sequence:
       - service: shell_command.pihole_off
###############################################################################
#  Shell Command
###############################################################################
shell_command:
  pihole_on: sudo pihole enable
  pihole_off: sudo pihole disable

